(function(){var t,n,i;i="undefined"!=typeof exports&&null!==exports?exports:this,i.fromXWSFaction={rebels:"Rebel Alliance",empire:"Galactic Empire",scum:"Scum and Villainy"},i.toXWSFaction={"Rebel Alliance":"rebels","Galactic Empire":"empire","Scum and Villainy":"scum"},i.toXWSUpgrade={Astromech:"amd",Elite:"ept",Modification:"mod","Salvaged Astromech":"samd"},i.fromXWSUpgrade={amd:"Astromech",astromechdroid:"Astromech",ept:"Elite",elitepilottalent:"Elite",mod:"Modification",samd:"Salvaged Astromech"},n="https://github.com/elistevens/xws-spec",t={L:1,M:0,Q:3,H:2},i.XWSManager=function(){function e(t){this.container=$(t.container),this.setupUI(),this.setupHandlers()}return e.prototype.setupUI=function(){return this.container.addClass("hidden-print"),this.container.html($.trim('<div class="row-fluid">\n    <div class="span9">\n        <button class="btn btn-primary from-xws">Import from XWS (beta)</button>\n        <button class="btn btn-primary to-xws">Export to XWS (beta)</button>\n    </div>\n</div>')),this.xws_export_modal=$(document.createElement("DIV")),this.xws_export_modal.addClass("modal hide fade xws-modal hidden-print"),this.container.append(this.xws_export_modal),this.xws_export_modal.append($.trim('<div class="modal-header">\n    <button type="button" class="close hidden-print" data-dismiss="modal" aria-hidden="true">&times;</button>\n    <h3>XWS Export (Beta!)</h3>\n</div>\n<div class="modal-body">\n    <ul class="nav nav-pills">\n        <li><a id="xws-text-tab" href="#xws-text" data-toggle="tab">Text</a></li>\n        <li><a id="xws-qrcode-tab" href="#xws-qrcode" data-toggle="tab">QR Code</a></li>\n    </ul>\n    <div class="tab-content">\n        <div class="tab-pane" id="xws-text">\n            Copy and paste this into an XWS-compliant application to transfer your list.\n            <i>(This is in beta, and the <a href="'+n+'">spec</a> is still being defined, so it may not work!)</i>\n            <div class="container-fluid">\n                <textarea class="xws-content"></textarea>\n            </div>\n        </div>\n        <div class="tab-pane" id="xws-qrcode">\n            Below is a QR Code of XWS.  <i>This is still very experimental!</i>\n            <div id="xws-qrcode-container"></div>\n        </div>\n    </div>\n</div>\n<div class="modal-footer hidden-print">\n    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>\n</div>')),this.xws_import_modal=$(document.createElement("DIV")),this.xws_import_modal.addClass("modal hide fade xws-modal hidden-print"),this.container.append(this.xws_import_modal),this.xws_import_modal.append($.trim('<div class="modal-header">\n    <button type="button" class="close hidden-print" data-dismiss="modal" aria-hidden="true">&times;</button>\n    <h3>XWS Import (Beta!)</h3>\n</div>\n<div class="modal-body">\n    Paste XWS here to load a list exported from another application.\n    <i>(This is in beta, and the <a href="'+n+'">spec</a> is still being defined, so it may not work!)</i>\n    <div class="container-fluid">\n        <textarea class="xws-content" placeholder="Paste XWS here..."></textarea>\n    </div>\n</div>\n<div class="modal-footer hidden-print">\n    <span class="xws-import-status"></span>&nbsp;\n    <button class="btn btn-primary import-xws">Import It!</button>\n    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>\n</div>'))},e.prototype.setupHandlers=function(){return this.from_xws_button=this.container.find("button.from-xws"),this.from_xws_button.click(function(t){return function(n){return n.preventDefault(),t.xws_import_modal.modal("show")}}(this)),this.to_xws_button=this.container.find("button.to-xws"),this.to_xws_button.click(function(n){return function(i){return i.preventDefault(),$(window).trigger("xwing:pingActiveBuilder",function(i){var e;return e=$(n.xws_export_modal.find(".xws-content")),e.attr("readonly"),e.val(JSON.stringify(i.toXWS())),$("#xws-qrcode-container").text(""),$("#xws-qrcode-container").qrcode({text:JSON.stringify(i.toMinimalXWS()),correctLevel:t.L}),n.xws_export_modal.modal("show"),$("#xws-text-tab").tab("show"),e.select(),e.focus()})}}(this)),$("#xws-qrcode-container").click(function(){return window.open($("#xws-qrcode-container canvas")[0].toDataURL())}),this.load_xws_button=$(this.xws_import_modal.find("button.import-xws")),this.load_xws_button.click(function(t){return function(n){var e;return n.preventDefault(),e=$(t.xws_import_modal.find(".xws-import-status")),e.text("Loading..."),function(e){var o;try{o=JSON.parse(t.xws_import_modal.find(".xws-content").val())}catch(a){return n=a,void e.text("Invalid JSON")}return function(n){return $(window).trigger("xwing:activateBuilder",[i.fromXWSFaction[n.faction],function(i){return i.current_squad.dirty&&null!=i.backend?(t.xws_import_modal.modal("hide"),i.backend.warnUnsaved(i,function(){return i.loadFromXWS(n,function(n){return n.success?void 0:(t.xws_import_modal.modal("show"),e.text(n.error))})})):i.loadFromXWS(n,function(n){return n.success?t.xws_import_modal.modal("hide"):e.text(n.error)})}])}(o)}(e)}}(this))},e}()}).call(this);
//# sourceMappingURL=xws.min.js
//@ sourceMappingURL=xws.min.map